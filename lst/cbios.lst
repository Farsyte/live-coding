     1     			TITLE   'SKELETAL CBIOS FOR FIRST LEVEL OF CP/M ALTERATION'
     2 			;
     3 			;	NOTE: MSIZE DETERMINES WHERE THIS BIOS IS LOCATED.
     4      00 10	MSIZE	EQU	16		;CP/M VERSION MEMORY SIZE IN KILOBYTES
     5      3E 00	PATCH	EQU	(MSIZE*1024)-(2*256)  ;START OF THE CBIOS PATCH
     6 			;
     7      00 00	CBASE	EQU	(MSIZE-16)*1024 ;BIAS FOR SYSTEMS LARGER THAN 16K
     8      29 00	CPMB	EQU	CBASE+2900H	;BASE OF CP/M (= BASE OF CCP)
     9      31 06	BDOS	EQU	CBASE+3106H	;BASE OF RESIDENT PORTION OF CP/M
    10      D7 00	CPML	EQU	$-CPMB		;LENGTH OF THE CP/M SYSTEM IN BYTES
    11      FF AE	NSECTS	EQU	CPML/128	;NUMBER OF SECTORS TO LOAD ON WARM START
    12 			;
    13 			;	PAGE ZERO STUFF:
    14 			;
    15      00 03	IOBYTE	EQU	0003H
    16      00 04	CDISK	EQU	0004H
    17 			;
    18      00 40	SCRAT	EQU	40H	;USE THE AREA RESERVED FOR US AT 40H TO HOLD:
    19      00 40	TRACK	EQU	SCRAT+0		;LAST SELECTED TRACK
    20      00 41	SECTOR	EQU	SCRAT+1		;LAST SELECTED SECTOR
    21      00 42	DMAAD	EQU	SCRAT+2		;LAST SELECTED DMA ADDRESS
    22      00 44	DISKNO	EQU	SCRAT+4		;LAST SELECTED DISK NUMBER
    23 			;
    24      3E 00		ORG	PATCH	;ORIGIN OF THIS PROGRAM
    25 			;
    26 			;	JUMP VECTOR FOR INDIVIDUAL SUBROUTINES
    27 			;
    28 3E00 C3 2D 3E		JMP	BOOT	;COLD START
    29 			WBOOTE:
    30 3E03 C3 30 3E		JMP	WBOOT	;WARM START
    31
    32 3E06 C3 9B 3E		JMP	CONST	;CONSOLE STATUS
    33 3E09 C3 9F 3E		JMP	CONIN	;CONSOLE CHARACTER IN
    34 3E0C C3 A2 3E		JMP	CONOUT	;CONSOLE CHARACTER OUT
    35 3E0F C3 A4 3E		JMP	LIST	;LIST CHARACTER OUT
    36 3E12 C3 A6 3E		JMP	PUNCH	;PUNCH CHARACTER OUT
    37 3E15 C3 A8 3E		JMP	READER	;READER CHARACTER OUT
    38
    39 3E18 C3 AA 3E		JMP	HOME	;MOVE HEAD TO HOME POSITION
    40 3E1B C3 B0 3E		JMP	SELDSK	;SELECT DISK
    41 3E1E C3 B5 3E		JMP	SETTRK	;SET TRACK NUMBER
    42 3E21 C3 BA 3E		JMP	SETSEC	;SET SECTOR NUMBER
    43 3E24 C3 BF 3E		JMP	SETDMA	;SET DMA ADDRESS
    44 3E27 C3 C5 3E		JMP	READ	;READ DISK
    45 3E2A C3 C7 3E		JMP	WRITE	;WRITE DISK
    46
    47 			;; added in cp/m 2.0:
    48 			;;	JMP	LISTST	;RETURN LIST STATUS
    49 			;;	JMP	SECTRAN	;SECTOR TRANSLATE
    50
    51     		        PAGE
    52
    53 			;;; INDIVIDUAL SUBROUTINES TO PERFORM EACH FUNCTION
    54
    55
    56 			;;; The BOOT entry point gets control from the cold start loader
    57 			;;; and is responsible for basic system initialization, includ-
    58 			;;; ing sending a sign-on message (which can be omitted in the
    59 			;;; first version). If the IOBYTE function is implemented, it
    60 			;;; must be set at this point. The various system parameters
    61 			;;; which are set by the WBOOT entry point must be initialized,
    62 			;;; and control is transferred to the CCP at 2900H+b for further
    63 			;;; processing. Note that reg C must be set to zero to select
    64 			;;; drive A.
    65
    66 			BOOT:
    67 3E2D C3 79 3E	        JMP     GOCPM           ;INITIALIZE AND GO TO CP/M
    68
    69 			;;; The WBOOT entry point gets control when a warm start occurs.
    70 			;;; A warm start is performed whenever a user program branches to
    71 			;;; location 0000H, or when the CPU is reset from the front panel.
    72 			;;; The CP/M system must be loaded from the first two tracks of
    73 			;;; drive A up to, but not including, the BIOS (or CBIOS, if you
    74 			;;; have completed your patch). System parameters must be ini-
    75 			;;; tialized as shown below:
    76 			;;;
    77 			;;;          location 0,1,2    Set to JMP WBOOT for warm starts
    78 			;;;                            (0000H: JMP 3E03H+b)
    79 			;;;          location 3        Set initial value of IOBYTE, if
    80 			;;;                            implemented in your CBIOS.
    81 			;;;          location 5,6,7    Set to JMP BDOS, which is the
    82 			;;;                            primary entry point to CP/M for
    83 			;;;                            transient programs
    84 			;;;                            (0005H: JMP 3106H+b)
    85 			;;;
    86 			;;; Upon completion of the initialization, the WBOOT program
    87 			;;; must branch to the CCP at 2900H+b to (re)start the system.
    88 			;;; Upon entry to the CCP, register C is set to the drive to
    89 			;;; select after system initialization.
    90
    91 			WBOOT:  ;SIMPLEST CASE IS TO READ THEDISK UNTIL ALL SECTORS LOADED
    92 3E30 31 80 00		LXI	SP, 80H		;USE SPACE BELOW BUFFER FOR STACK
    93 3E33 0E 00		MVI	C, 0		;SELECT DISK 0
    94 3E35 CD B0 3E		CALL	SELDSK
    95 3E38 CD AA 3E		CALL	HOME		;GO TO TRACK 00
    96 			;
    97 3E3B 06 AE		MVI	B, NSECTS	;B COUNTS * OF SECTORS TO LOAD
    98 3E3D 0E 00		MVI	C, 0		;C HAS THE CURRENT TRACK NUMBER
    99 3E3F 16 02		MVI	D, 2		;D HAS THE NEXT SECTOR TO READ
   100 			;	NOTE THAT WE BEGIN BY READING TRACK 0, SECTOR 2 SINCE SECTOR 1
   101 			;	CONTAINS THE COLD START LOADER, WHICH IS SKIPPED IN A WARM START
   102 3E41 21 00 29		LXI	H, CPMB		;BASE OF CP/M (INITIAL LOAD POINT)
   103 			LOAD1:	;LOAD	ONE MORE SECTOR
   104 3E44 C5			PUSH	B		;SAVE SECTOR COUNT, CURRENT TRACK
   105 3E45 D5			PUSH	D		;SAVE NEXT SECTOR TO READ
   106 3E46 E5			PUSH	H		;SAVE DMA ADDRESS
   107 3E47 4A			MOV	C, D		;GET SECTOR ADDRESS TO REGISTER C
   108 3E48 CD BA 3E		CALL	SETSEC		;SET SECTOR ADDRESS FROM REGISTER C
   109 3E4B C1			POP	B		;RECALL DMA ADDRESS TO B, C
   110 3E4C C5			PUSH	B		;REPLACE ON STACK FOR LATER RECALL
   111 3E4D CD BF 3E		CALL	SETDMA		;SET DMA ADDRESS FROM B, C
   112 			;
   113 			;	DRIVE SET TO 0, TRACK SET, SECTOR SET, DMA ADDRESS SET
   114 3E50 CD C5 3E		CALL	READ
   115 3E53 FE 00		CPI	00H		;ANY ERRORS?
   116 3E55 C2 30 3E		JNZ	WBOOT		;RETRY THE ENTIRE BOOT IF AN ERROR OCCURS
   117 			;
   118 			;	NO ERROR, MOVE TO NEXT SECTOR
   119 3E58 E1			POP	H		;RECALL DMA ADDRESS
   120 3E59 11 80 00		LXI	D, 128		;DMA=DMA+128
   121 3E5C 19			DAD	D		;NEW DMA ADDRESS IS IN H, L
   122 3E5D D1			POP	D		;RECALL SECTOR ADDRESS
   123 3E5E C1			POP	B	        ;RECALL NUMBER OF SECTORS REMAINING, AND CURRENT TRK
   124 3E5F 05			DCR	B		;SECTORS=SECTORS-1
   125 3E60 CA 79 3E		JZ	GOCPM		;TRANSFER TO CP/M IF ALL HAVE BEEN LOADED
   126 			;
   127 			;	MORE SECTORS REMAIN TO LOAD, CHECK FOR TRACK CHANGE
   128 3E63 14			INR	D
   129 3E64 7A			MOV	A,D		;SECTOR=27?, IF SO, CHANGE TRACKS
   130 3E65 FE 1B		CPI	27
   131 3E67 DA 44 3E		JC	LOAD1		;CARRY GENERATED IF SECTOR<27
   132 			;
   133 			;	END OF CURRENT TRACK, GO TO NEXT TRACK
   134 3E6A 16 01		MVI	D, 1		;BEGIN WITH FIRST SECTOR OF NEXT TRACK
   135 3E6C 0C			INR	C		;TRACK=TRACK+1
   136 			;
   137 			;	SAVE REGISTER STATE, AND CHANGE TRACKS
   138 3E6D C5			PUSH	B
   139 3E6E D5			PUSH	D
   140 3E6F E5			PUSH	H
   141 3E70 CD B5 3E		CALL	SETTRK		;TRACK ADDRESS SET FROM REGISTER C
   142 3E73 E1			POP	H
   143 3E74 D1			POP	D
   144 3E75 C1			POP	B
   145 3E76 C3 44 3E		JMP	LOAD1		;FOR ANOTHER SECTOR
   146 			;
   147 			;	END OF	LOAD OPERATION, SET PARAMETERS AND GO TO CP/M
   148 			GOCPM:
   149 3E79 3E C3		MVI	A, 0C3H		;C3 IS A JMP INSTRUCTION
   150 3E7B 32 00 00		STA	0		;FOR JMP TO WBOOT
   151 3E7E 21 03 3E		LXI	H, WBOOTE	;WBOOT ENTRY POINT
   152 3E81 22 01 00		SHLD	1		;SET ADDRESS FIELD FOR JMP AT 0
   153 			;
   154 3E84 32 05 00		STA	5		;FOR JMP TO BDOS
   155 3E87 21 06 31		LXI	H, BDOS		;BDOS ENTRY POINT
   156 3E8A 22 06 00		SHLD	6		;ADDRESS FIELD OF JUMP AT 5 TO BDOS
   157 			;
   158 3E8D 01 80 00		LXI	B, 80H		;DEFAULT DMA ADDRESS IS 80H
   159 3E90 CD BF 3E		CALL	SETDMA
   160 			;
   161 3E93 FB			EI			;ENABLE THE INTERRUPT SYSTEM
   162 3E94 3A 04 00		LDA	CDISK		;GET CURRENT DISK NUMBER
   163 3E97 4F			MOV	C, A		;SEND TO THE CCP
   164 3E98 C3 00 29		JMP	CPMB		;GO TO CP/M FOR FURTHER PROCESSING
   165
   166 			;;; Sample the status of the currently assigned console device;
   167 			;;; return 0FFH in register A if a character is ready to read
   168 			;;; and 00H in register A if no console characters are ready.
   169
   170 			CONST:
   171 3E9B 76			HLT                     ;content tbd
   172 3E9C 3E 00	        MVI     A,00H
   173 3E9E C9		        RET
   174
   175 			;;; Read the next console character into register A, and set the
   176 			;;; high-order (parity bit). If no console character is ready,
   177 			;;; wait until a character is typed before returning.
   178
   179 			CONIN:
   180 3E9F 79		        MOV     A,C
   181 3EA0 76			HLT                     ;content tbd
   182 3EA1 C9		        RET
   183
   184 			;;; Send the character from register C to the console output de-
   185 			;;; veice. The character is in ASCII, with high-order (parity) bit
   186 			;;; set to zero. You may want to include a time-out on a line
   187 			;;; feed or carriage return, if your console device requires some
   188 			;;; time interval at the end of the line (such as a TI Silent 700
   189 			;;; terminal). You can, if you wish, filter out control char-
   190 			;;; acters which cause your console device to react in a strange
   191 			;;; way (a control-z causes the Lear Siegler terminal to clear
   192 			;;; the screen, for example).
   193
   194 3EA2 76		CONOUT: HLT                     ;content tbd
   195 3EA3 C9		        RET
   196
   197 			;;; Send the character from register C to the currently assigned
   198 			;;; listing device. The character is in ASCII with zero parity.
   199
   200 			LIST:
   201 3EA4 76			HLT                     ;content tbd
   202 3EA5 C9		        RET
   203
   204 			;;; Send the character from register C to the currently assigned
   205 			;;; punch device. The character is in ASCII with zero parity.
   206
   207 			PUNCH:
   208 3EA6 76			HLT                     ;content tbd
   209 3EA7 C9		        RET
   210
   211 			;;; Read the next character from the currently assigned reader de-
   212 			;;; vice into register A with zero parity (high-order bit must be
   213 			;;; zero), an end of file condition is reported by return an
   214 			;;; ASCII control-z (1AH).
   215
   216 			READER:
   217 3EA8 76			HLT                     ;content tbd
   218 3EA9 C9		        RET
   219
   220     		        PAGE
   221
   222 			;;; Return the disk head of the currently selected disk (initially
   223 			;;; disk A) to the track 00 position. If your controller allows
   224 			;;; access to the track 0 flag from the device, step the head until
   225 			;;; the track 0 flag is detected. If your controller does not
   226 			;;; support this feature, you can translate the HOME call into a
   227 			;;; call on SETTRK with a parameter of 0.
   228
   229 			HOME:
   230 3EAA 0E 00	        MVI     C,0
   231 3EAC CD B5 3E	        CALL    SETTRK
   232 3EAF C9		        RET
   233
   234 			;;; Select the disk drive given by register C for further opera-
   235 			;;; tions, where register C contains 0 for drive A, 1 for drive B,
   236 			;;; 2 for drive C, and 3 for drive D. (The standard CP/M
   237 			;;; distribution supports a maximum of four drives). If
   238 			;;; your system has less than 4 drives, you may wish to give an
   239 			;;; error message at the console, and terminate execution. It is
   240 			;;; advisable to postpone the actual disk operation until
   241 			;;; an I/O function (seek, read or write) is actually performed,
   242 			;;; since disk selects often occur without ultimately performing
   243 			;;; any disk I/O, and many controllers will unload the head of the
   244 			;;; current disk before selecting the new drive. This would
   245 			;;; cause an excessive amount of noise and disk wear.
   246
   247 			SELDSK:
   248 3EB0 79		        MOV     A,C
   249 3EB1 32 44 00	        STA     DISKNO
   250 3EB4 C9		        RET
   251
   252 			;;; Register C contains the track number for subsequent disk
   253 			;;; accesses on the currently selected drive. You can choose to
   254 			;;; seek the selected track at this time, or delay the seek until
   255 			;;; the next read or write actually occurs. Register C can take
   256 			;;; on values in the range 0-76 corresponding to valid track
   257 			;;; numbers.
   258
   259 			SETTRK:
   260 3EB5 79		        MOV     A,C
   261 3EB6 32 40 00	        STA     TRACK
   262 3EB9 C9		        RET
   263
   264 			;;; Register C contains the sector number (1 through 26) for sub-
   265 			;;; sequent disk accesses on the currently selected drive. You
   266 			;;; can choose to send this information to the controller at this
   267 			;;; point, or instead delay sector selectino until a read
   268 			;;; or write opration occurs.
   269
   270 			SETSEC:
   271 3EBA 79		        MOV     A,C
   272 3EBB 32 41 00	        STA     SECTOR
   273 3EBE C9		        RET
   274
   275 			;;; Registers B and C (high-order 8 bits in B, low-order 8 bits
   276 			;;; in C) contain the DMA (Direct Memory Access) address for sub-
   277 			;;; sequent read or write operations. For example, if B = 00H
   278 			;;; and C = 80H when SETDMA is called, then all subsequent read
   279 			;;; operations read their data into 80H through 0FFH, and all
   280 			;;; subsequent write operations get their data from 80H through
   281 			;;; 0FFH, until the next call to SETDMA occurs. The initial
   282 			;;; DMA address is assumed to be 80H. Note that the controller
   283 			;;; need not actually support direct memory access. If, for
   284 			;;; example, all data is received and sent through I/O ports, the
   285 			;;; CBIOS which you construct will use he 128-byte area starting
   286 			;;; at the selected DMA address for the memory buffer during the
   287 			;;; following read or write operations.
   288
   289 			SETDMA:
   290 3EBF 69		        MOV     L,C
   291 3EC0 60		        MOV     H,B
   292 3EC1 22 42 00	        SHLD    DMAAD
   293 3EC4 C9		        RET
   294
   295 			;;; Assuming the drive has been selected, the track has been set,
   296 			;;; the sector has been set, and the DMA address has been speci-
   297 			;;; fied, the READ subroutine attempts to read one sector based
   298 			;;; upon these parameters, and returns the following error codes
   299 			;;; in register A:
   300 			;;;
   301 			;;;            0      no errors occurred
   302 			;;;            1      non-recoverable error conditino occurred
   303 			;;;
   304 			;;; Currently, CP/M responds only to a zero or non-zero value as
   305 			;;; the return code. That is, if the value in register A is 0
   306 			;;; then CP/M assumes that the disk operation completed properly.
   307 			;;; If an error occurs, however, the CBIOS should attempt at
   308 			;;; least 10 re-trie to see if the error is recoverable. When an
   309 			;;; error is reported the BDOS will print the message "BDOS ERR
   310 			;;; ON x: BAD SECTOR." The operator then has the option of
   311 			;;; typing <cr> to ignore the error, or control-C to abort.
   312
   313 			READ:
   314 3EC5 76			HLT                     ;content tbd
   315 3EC6 C9		        RET
   316
   317 			;;; Write the data from the currently selected DMA address to the
   318 			;;; currently selected drive, track, and sector. The data should
   319 			;;; be marked as "non deleted data" to maintain compatibility
   320 			;;; with other CP/M systems. The error codes given in the READ
   321 			;;; command are returned in register A, with error recovery at-
   322 			;;; tempts as described above.
   323
   324 			WRITE:
   325 3EC7 76			HLT                     ;content tbd
   326 3EC8 C9		        RET
   327
   328      01 37	LEFT    EQU     (MSIZE*1024)-$


*******************************************************************************
                                 Symbols table
*******************************************************************************

Names		Types	Values
-----		-----	------
MSIZE		EQU	00010h
PATCH		EQU	03E00h
CBASE		EQU	00000h
CPMB		EQU	02900h
BDOS		EQU	03106h
CPML		EQU	FFFFD700h
NSECTS		EQU	FFFFFFAEh
IOBYTE		EQU	00003h
CDISK		EQU	00004h
SCRAT		EQU	00040h
TRACK		EQU	00040h
SECTOR		EQU	00041h
DMAAD		EQU	00042h
DISKNO		EQU	00044h
LEFT		EQU	00137h
WBOOTE		Label	03E03h
BOOT		Label	03E2Dh
WBOOT		Label	03E30h
LOAD1		Label	03E44h
GOCPM		Label	03E79h
CONST		Label	03E9Bh
CONIN		Label	03E9Fh
CONOUT		Label	03EA2h
LIST		Label	03EA4h
PUNCH		Label	03EA6h
READER		Label	03EA8h
HOME		Label	03EAAh
SELDSK		Label	03EB0h
SETTRK		Label	03EB5h
SETSEC		Label	03EBAh
SETDMA		Label	03EBFh
READ		Label	03EC5h
WRITE		Label	03EC7h

Statistics
----------
"Name"	= 0
"EQU"	= 15
"SET"	= 0
Labels	= 18


