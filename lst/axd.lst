     1 			        ;; 2023-09-30 librarian note:
     2 			        ;;   retrieved from http://www.gaby.de/cpm/manuals/archive/cpm22htm/axa.asm
     3 			        ;;   adjusted for assembly with "asm8080"
     4 			        ;;   - "IF" is less flexible.
     5
     6     			title   'mds cold start loader at 3000h'
     7 			;
     8 			;	mds-800 cold start loader for cp/m 2.0
     9 			;
    10 			;	version 2.0 august, 1979
    11 			;
    12      00 00	testing	equ	0	    	;if true, then go to mon80 on  errors
    13 			;
    14     			if	testing
    15     		bias	equ	03400h
    16     			else
    17      00 00	bias	equ	0000h
    18     			endif
    19      00 00	cpmb	equ	bias		;base of dos load
    20      08 06	bdos	equ	806h+bias	;entry to dos for calls
    21      18 80	bdose	equ	1880h+bias	;end of dos load
    22      16 00	boot	equ	1600h+bias	;cold start entry point
    23      16 03	rboot	equ	boot+3		;warm start entry point
    24 			;
    25      30 00		org	03000h		;loaded down from hardware boot at 3000H
    26 			;
    27      18 80	bdosl	equ	bdose-cpmb
    28      00 02	ntrks	equ	2		;number of tracks to read
    29      00 31	bdoss	equ	bdosl/128	;number of sectors in dos
    30      00 19	bdoso	equ	25		;number of bdos sectors on track 0
    31      00 18	bdos1	equ	bdoss-bdoso	;number of sectors on track 1
    32 			;
    33      F8 00	mon80	equ	0f800h		;intel monitor base
    34      FF 0F	rmon80	equ	0ff0fh		;restart location for mon80
    35      00 78	base	equ	078h		;'base' used by controller
    36      00 79	rtype	equ	base+1		;result type
    37      00 7B	rbyte	equ	base+3		;result byte
    38      00 7F	reset	equ	base+7		;reset controller
    39 			;
    40 			;
    41      00 78	dstat	equ	base		;disk status port
    42      00 79	ilow	equ	base+1		;low iopb address
    43      00 7A	ihigh	equ	base+2		;high iopb address
    44      00 FF	bsw	equ	0ffh		;boot switch
    45      00 03	recal	equ	3h		;recalibrate selected drive
    46      00 04	readf	equ	4h		;disk read function
    47      01 00	stack	equ	100h		;use end of boot for stack
    48 			;
    49 			rstart:
    50 3000 31 00 01		lxi	sp,stack;	;in case of call to mon80
    51 			;	clear disk status
    52 3003 DB 79		in	rtype
    53 3005 DB 7B		in	rbyte
    54 			;	check if boot switch is off
    55 			coldstart:
    56 3007 DB FF		in 	bsw
    57 3009 E6 02		ani	02h		;switch on?
    58 300B C2 07 30		jnz	coldstart
    59 			;	clear the controller
    60 300E D3 7F		out	reset		;logic cleared
    61 			;
    62 			;
    63 3010 06 02		mvi	b,ntrks		;number of tracks to read
    64 3012 21 42 30		lxi	h,iopbo
    65 			;
    66 			start:
    67 			;
    68 			;	read first/next track into cpmb
    69 3015 7D			mov	a,l
    70 3016 D3 79		out	ilow
    71 3018 7C			mov	a,h
    72 3019 D3 7A		out	ihigh
    73 301B DB 78	waito:	in	dstat
    74 301D E6 04		ani	4
    75 301F CA 1B 30		jz	waito
    76 			;
    77 			;	check	disk status
    78 3022 DB 79		in	rtype
    79 3024 E6 03		ani	11b
    80 3026 FE 02		cpi	2
    81 			;
    82     			if	testing
    83     			cnc	rmon80		;go to monitor if 11 or 10
    84     		        else
    85 3028 D2 00 30		jnc	rstart		;retry the load
    86     			endif
    87 			;
    88 302B DB 7B		in	rbyte		;i/o complete, check status
    89 			;	if not	ready, then go to mon80
    90 302D 17			ral
    91 302E DC 0F FF		cc	rmon80		;not ready bit set
    92 3031 1F			rar			;restore
    93 3032 E6 1E		ani	11110b		;overrun/addr err/seek/crc/xxxx
    94 			;
    95     			if	testing
    96     			cnz	rmon80		;go to monitor
    97     		        else
    98 3034 C2 00 30		jnz	rstart		;retry the load
    99     			endif
   100 			;
   101 			;
   102 3037 11 07 00		lxi	d,iopbl		;length of iopb
   103 303A 19			dad	d		;addressing next iopb
   104 303B 05			dcr	b		;count down tracks
   105 303C C2 15 30		jnz	start
   106 			;
   107 			;
   108 			;	jmp to boot to print initial message, and set up jmps
   109 303F C3 00 16		jmp	boot
   110 			;
   111 			;	parameter blocks
   112 3042		iopbo:	db	80h		;iocw, no update
            80 
   113 3043			db	readf		;read function
            04 
   114 3044			db	bdoso		;*sectors to read on track 0
            19 
   115 3045			db	0		;track 0
            00 
   116 3046			db	2		;start with sector 2 on track 0
            02 
   117 3047			dw	cpmb		;start at base of bdos
            0000 
   118      00 07	iopbl	equ	$-iopbo
   119 			;
   120 3049		iopb1:	db	80h
            80 
   121 304A			db	readf
            04 
   122 304B			db	bdos1		;sectors to read on track 1
            18 
   123 304C			db	1		;track 1
            01 
   124 304D			db	1		;sector 1
            01 
   125 304E			dw	cpmb+bdoso*128	;base of second read
            800C 
   126 			;
   127     			end


*******************************************************************************
                                 Symbols table
*******************************************************************************

Names		Types	Values
-----		-----	------
testing		EQU	00000h
bias		EQU	00000h
cpmb		EQU	00000h
bdos		EQU	00806h
bdose		EQU	01880h
boot		EQU	01600h
rboot		EQU	01603h
bdosl		EQU	01880h
ntrks		EQU	00002h
bdoss		EQU	00031h
bdoso		EQU	00019h
bdos1		EQU	00018h
mon80		EQU	0F800h
rmon80		EQU	0FF0Fh
base		EQU	00078h
rtype		EQU	00079h
rbyte		EQU	0007Bh
reset		EQU	0007Fh
dstat		EQU	00078h
ilow		EQU	00079h
ihigh		EQU	0007Ah
bsw		EQU	000FFh
recal		EQU	00003h
readf		EQU	00004h
stack		EQU	00100h
iopbl		EQU	00007h
rstart		Label	03000h
coldstart	Label	03007h
start		Label	03015h
waito		Label	0301Bh
iopbo		Label	03042h
iopb1		Label	03049h

Statistics
----------
"Name"	= 0
"EQU"	= 26
"SET"	= 0
Labels	= 6


