     1     		        TITLE   'CP/M 2.2 combined GETSYS and PUTSYS programs for VoidStar8080'
     2
     3      01 00		ORG	0100H
     4 			        
     5      00 14	msize   equ     20              ;CP/M memory size
     6
     7 			        ;; "bias" is the amount to add to addresses for > 20k
     8 			        ;;      (referred to as "b" throughout the text)
     9
    10      00 00	bias    equ     (msize-20)*1024
    11      34 00	ccp     equ     3400h+bias
    12      3C 00	bdos    equ     ccp+0800h
    13      4A 00	bios    equ     ccp+1600h
    14
    15 				;; getsys reads tracks 0 and 1 to memory at 3380h+b
    16 			        ;; 
    17 				;;	reg	use
    18 				;;	a	-- scratch --
    19 				;;	b	track count (0,1)
    20 				;;	c	sector count (1,2,...,26)
    21 				;;	de	-- scratch --
    22 				;;	hl	load address
    23 				;;	sp	set to stack address
    24
    25 			getsys:
    26 0100 31 80 33		lxi	sp,ccp-0080h    ; set stack pointer to scratch area
    27 0103 21 80 33		lxi	hl,ccp-0080h    ; set base load address
    28 0106 06 00		mvi	b,0             ; start with track 0
    29 			rdtrk:                          ; read next track (initially 0)
    30 0108 0E 01		mvi	c,1             ; read starting with sector 1
    31 			rdsec:                          ; read next sector
    32 010A CD 00 03		call	secrd           ; user supplied subroutine
    33 010D 11 80 00		lxi	de,128          ; move load address to next 1/2 page
    34 0110 19			dad	de              ; hl = hl + 128
    35 0111 0C			inr	c               ; sector = sector + 1
    36 0112 79			mov	a,c             ; check for end of track
    37 0113 FE 1B		cpi	27
    38 0115 DA 0A 01		jc	rdsec           ; carry generated if sector <27
    39
    40 			;    arrive here at end of track, move to next track
    41
    42 0118 04			inr	b
    43 0119 78			mov	a,b             ; test for last track
    44 011A FE 02		cpi	2
    45 011C DA 08 01		jc	rdtrk           ; carry generated if track <2
    46
    47 011F FB			ei
    48 0120 76		        hlt
    49
    50 			        ;; putsys places memory image starting at 3880h+b
    51 			        ;; back to tracks 0 and 1
    52 			        ;; start this program at the next page boundary
    53
    54      02 00	        org     ($+0100h) and 0FF00h
    55
    56 0200 31 80 33		lxi	sp,ccp-0080h    ; set stack pointer to scratch area
    57 0203 21 80 33		lxi	hl,ccp-0080h    ; set base load address
    58 0206 06 00		mvi	b,0             ; start with track 0
    59 			wrtrk:                          ; read next track (initially 0)
    60 0208 0E 01		mvi	c,1             ; read starting with sector 1
    61 			wrsec:                          ; read next sector
    62 020A CD 00 04		call	secwr           ; user supplied subroutine
    63 020D 11 80 00		lxi	de,128          ; move load address to next 1/2 page
    64 0210 19			dad	de              ; hl = hl + 128
    65 0211 0C			inr	c               ; sector = sector + 1
    66 0212 79			mov	a,c             ; check for end of track
    67 0213 FE 1B		cpi	27
    68 0215 DA 0A 02		jc	wrsec           ; carry generated if sector <27
    69
    70 			;    arrive here at end of track, move to next track
    71
    72 0218 04			inr	b
    73 0219 78			mov	a,b             ; test for last track
    74 021A FE 02		cpi	2
    75 021C DA 08 02		jc	wrtrk           ; carry generated if track <2
    76
    77 021F FB			ei
    78 0220 76		        hlt
    79
    80 			;    user supplied subroutines for sector read and write
    81
    82 			;;; === === === === === === === === === === === === === === === ===
    83 			;;; disk controller i/o ports
    84 			;;; === === === === === === === === === === === === === === === ===
    85
    86      00 0A	bdres	equ	10              ;reset controller (drv 0, trk 0, sec 1)
    87      00 0B	bddrv	equ	11              ;select drive
    88      00 0C	bdtrk	equ	12              ;select track
    89      00 0D	bdsec	equ	13              ;select sector
    90      00 0E	bddat	equ	14              ;read/write next byte
    91
    92 			        ;; move to next page boundary
    93
    94      03 00	        org     ($+0100h) and 0FF00h
    95
    96 			secrd:
    97 			        ;; read the next sector
    98 			        ;; track in <b>,
    99 			        ;; sector in <c>,
   100 			        ;; dmaaddr in <hl>
   101
   102 0300 C5			push	bc              ; save b and c registers
   103 0301 E5			push	hl              ; save hl registers
   104
   105 			        ;; user defined read operation
   106 0302 DB 0B	        in      bddrv           ;persist the current disk number
   107 0304 D3 0A	        out     bdres           ;reset the bdev controller
   108 0306 D3 0B	        out     bddrv           ;reselect the desired disk
   109 0308 78		        mov     a,b
   110 0309 D3 0C	        out     bdtrk           ;select the desired track
   111 030B 79		        mov     a,c
   112 030C D3 0D	        out     bdsec           ;select the desired sector
   113 030E 0E 80	        mvi     c,128
   114 			secrdl: 
   115 0310 DB 0E	        in      bddat
   116 0312 77		        mov     m,a
   117 0313 23		        inx     hl
   118 0314 0D		        dcr     c
   119 0315 C2 10 03	        jnz     secrdl
   120 0318 E1			pop	hl              ; recover hl
   121 0319 C1			pop	bc              ; recover b and c registers
   122 031A C9			ret                     ; back to main program
   123
   124 			        ;; move to next page boundary
   125
   126      04 00	        org     ($+0100h) and 0FF00h
   127
   128 			secwr:  
   129 			        ;; write the next sector
   130 			        ;; track in <b>,
   131 			        ;; sector in <c>,
   132 			        ;; dmaaddr in <hl>
   133
   134 0400 C5			push	bc              ; save b and c registers
   135 0401 E5			push	hl              ; save hl registers
   136
   137 			        ;; user defined read operation
   138 0402 DB 0B	        in      bddrv           ;persist the current disk number
   139 0404 D3 0A	        out     bdres           ;reset the bdev controller
   140 0406 D3 0B	        out     bddrv           ;reselect the desired disk
   141 0408 78		        mov     a,b
   142 0409 D3 0C	        out     bdtrk           ;select the desired track
   143 040B 79		        mov     a,c
   144 040C D3 0D	        out     bdsec           ;select the desired sector
   145 040E 0E 80	        mvi     c,128
   146 			secwrl: 
   147 0410 7E		        mov     a,m
   148 0411 23		        inx     hl
   149 0412 D3 0E	        out     bddat
   150 0414 77		        mov     m,a
   151 0415 23		        inx     hl
   152 0416 0D		        dcr     c
   153 0417 C2 10 04	        jnz     secwrl
   154 041A E1			pop	hl              ; recover hl
   155 041B C1			pop	bc              ; recover b and c registers
   156 041C C9			ret                     ; back to main program
   157
   158     			end


*******************************************************************************
                                 Symbols table
*******************************************************************************

Names		Types	Values
-----		-----	------
msize		EQU	00014h
bias		EQU	00000h
ccp		EQU	03400h
bdos		EQU	03C00h
bios		EQU	04A00h
bdres		EQU	0000Ah
bddrv		EQU	0000Bh
bdtrk		EQU	0000Ch
bdsec		EQU	0000Dh
bddat		EQU	0000Eh
getsys		Label	00100h
rdtrk		Label	00108h
rdsec		Label	0010Ah
wrtrk		Label	00208h
wrsec		Label	0020Ah
secrd		Label	00300h
secrdl		Label	00310h
secwr		Label	00400h
secwrl		Label	00410h

Statistics
----------
"Name"	= 0
"EQU"	= 10
"SET"	= 0
Labels	= 9


