     1 			        ;; 2023-09-30 librarian note:
     2 			        ;;   retrieved from http://www.gaby.de/cpm/manuals/archive/cpm22htm/axa.asm
     3 			        ;;   adjusted for assembly with "asm8080"
     4 			        ;;   - stock assembler allows $ in label names, asm8080 does not.
     5 			        
     6
     7 			;		combined getsys and putsys programs from
     8 			;		Sec 6.4
     9 			;
    10 			;	Start the programs at the base of the TPA
    11      01 00		org 0100h
    12
    13      00 14	msize	equ 20			;size of cp/m in Kbytes
    14
    15 			;"bias" is the amount to add to addresses for > 20K
    16 			;	(referred to as"b" throughout the text)
    17      00 00	bias	equ	(msize-20)*1024
    18      34 00	ccp	equ	3400h+bias
    19      3C 00	bdos	equ	ccp+0800h
    20      4A 00	bios	equ	ccp+1600h
    21
    22 			;	getsys programs tracks 0 and 1 to memory at 3880h + bias
    23 			;	register	     usage
    24 			;	a		(scratch register)
    25 			;	b		track count (0...76)
    26 			;	c		sector count (1...26)
    27 			;	d,e		(scratch register pair)
    28 			;	h,l		load address
    29 			;	sp		set to track address
    30
    31 			gstart:	;start of getsys
    32 0100 31 80 33		lxi	sp,ccp-0080h	;convenient place
    33 0103 21 80 33		lxi	h,ccp-0080h	;set initial load
    34 0106 06 00		mvi	b,0		;start with track
    35 			rd_trk:	;read next track
    36 0108 0E 01		mvi	c,1		;each track start
    37 			rd_sec:
    38 010A CD 00 03		call	read_sec	;get the next sector
    39 010D 11 80 00		lxi	d,128		;offset by one sector
    40 0110 19			dad	d		; (hl=hl+128)
    41 0111 0C			inr	c		;next sector
    42 0112 79			mov	a,c		;fetch sector number
    43 0113 FE 1B		cpi	27		;and see if last
    44 0115 DA 0A 01		jc	rd_sec		;<, do one more
    45
    46 			;arrive here at end of track, move to next track
    47
    48 0118 04			inr	b		;track = track+1
    49 0119 78			mov	a,b		;check for last
    50 011A FE 02		cpi	2		;track = 2 ?
    51 011C DA 08 01		jc	rd_trk		;<, do another
    52
    53 			;arrive here at end of load, halt for lack of anything 
    54 			;better
    55
    56 011F FB			ei
    57 0120 76			hlt
    58
    59 			;	putsys program, places memory image
    60 			;	starting at
    61 			;	3880h + bias back to tracks 0 and 1
    62 			;	start this program at the next page boundary
    63      02 00		org ($+0100h) and 0ff00h
    64 			put_sys:
    65 0200 31 80 33		lxi 	sp,ccp-0080h 	;convenient place
    66 0203 21 80 33		lxi 	h,ccp-0080h 	;start of dump
    67 0206 06 00		mvi 	b,0 		;start with track 0 (first track)
    68 			wr_trk:
    69 0208 0E 01		mvi 	c,1 		;start with sector 1 (first sector)
    70 			wr_sec:
    71 020A CD 00 04		call	write_sec	;write one sector
    72 020D 11 80 00		lxi 	d,128 		;length of each
    73 0210 19			dad	d		;<hl>=<hl> + 128
    74 0211 0C			inr	c		; <c>=<c> + 1
    75 0212 79			mov	a,c		;see if
    76 0213 FE 1B		cpi 	27 		;past end of track
    77 0215 DA 0A 02		jc  	wr_sec  	;no, do another
    78
    79 			;arrive here at end of track, move to next track
    80
    81 0218 04			inr	b		;track = track+1
    82 0219 78			mov	a,b		;see if
    83 021A FE 02		cpi	2		;last track
    84 021C DA 08 02		jc	wr_trk		;no, do another
    85
    86
    87 			;	done with putsys, halt for lack of anything
    88 			;	better
    89 021F FB			ei
    90 0220 76			hlt
    91
    92
    93 			;user supplied subroutines for sector read and write
    94
    95 			;	move to next page boundary
    96      03 00		org ($+0100h) and 0ff00h
    97
    98 			read_sec:
    99 				;read the next sector 
   100 				;track in <b>, 
   101 				;sector in <c> 
   102 				;dmaaddr in<hl>
   103
   104 0300 C5			push	b
   105 0301 E5			push	h
   106
   107 			;user defined read operation goes here
   108 0302			ds	64
   109 0342 E1			pop	h
   110 0343 C1			pop	b
   111 0344 C9			ret
   112
   113      04 00		org ($+100h) and 0ff00h ;another page 
   114 							; boundary
   115 			write_sec:
   116
   117 				;same parameters as read_sec
   118
   119 0400 C5			push 	b
   120 0401 E5			push	h
   121
   122 			;user defined write operation goes here
   123 0402			ds	64
   124 0442 E1			pop	h
   125 0443 C1			pop	b
   126 0444 C9			ret
   127
   128 			;end of getsys/putsys program
   129
   130     			end


*******************************************************************************
                                 Symbols table
*******************************************************************************

Names		Types	Values
-----		-----	------
msize		EQU	00014h
bias		EQU	00000h
ccp		EQU	03400h
bdos		EQU	03C00h
bios		EQU	04A00h
gstart		Label	00100h
rd_trk		Label	00108h
rd_sec		Label	0010Ah
put_sys		Label	00200h
wr_trk		Label	00208h
wr_sec		Label	0020Ah
read_sec	Label	00300h
write_sec	Label	00400h

Statistics
----------
"Name"	= 0
"EQU"	= 5
"SET"	= 0
Labels	= 8


