# -*- Makefile -*-
#
# Big Bunch of Make rules that I have accumulated

# Allow me to use "make Q=" to expose the commands
# being executed, but normally have them hidden.

Q		:= @
I		:= -
C		:= $Q $I

MACH		:= $(shell uname -m)/

# RF and RD exist because some versions of this file
# were tuned to deal with operating systems where these
# operations did not involve typing "/bin/rm ..."
RF		:= $C /bin/rm -f
RD		:= $C /bin/rm -fr

MAKEFLAGS	:= --no-print-directory

# Allow me to override certain items from the command line:
# use ECHO=true to turn off echo. Yes, confusing. Deal with it.
ECHO		:= echo

E		:= $C ${ECHO}
P		:= $C printf

ASLDIR		:= asl/
BINDIR		:= bin/
BDEVDIR		:= bdev/
MACHDIR		:= ${BINDIR}${MACH}
COVDIR		:= cov/
DEPDIR		:= dep/
HEXDIR		:= hex/
INCDIR		:= inc/
LIBDIR		:= lib/
LSTDIR		:= lst/
OBJDIR		:= obj/
PREDIR		:= pre/
SRCDIR		:= src/
TESTDIR		:= test/
UTLDIR		:= utl/

EXTDIR		:= ${SRCDIR}simext/

ASL		:= asl
ASLFLAGS	:= -q -L -gnuerrors

P2H		:= p2hex
P2HFLAGS	:= -q -F Intel

# LIBS		  = util			# add personal libraries
# SYSLIBS	  = pthread ncurses m		# add system libraries
SYSLIBS		:= ncurses m	 # add system libraries

ALLLIBS		:= $(LIBS) $(SYSLIBS)
ALLLIBA		:= 

ARFLAGS		:= cq

HSRC		:= ${wildcard ${INCDIR}*.h}
HSRC		+= ${wildcard ${INCDIR}*/*.h}
CSRC		:= ${wildcard ${SRCDIR}*.c}
LSRC		:= ${wildcard ${SRCDIR}/*/*.c}
TSRC		:= ${wildcard ${TESTDIR}*.c}
EXEC		:= ${PROG:%=${MACHDIR}%}

EXTSRC		:= ${wildcard ${EXTDIR}*.c}
EXTOBJ		:= ${EXTSRC:${EXTDIR}%.c=${OBJDIR}%.o}
EXTLIB		:= simext
EXTLIBA		:= ${EXTLIB:%=${LIBDIR}lib%.a}

ALLLIBS		:= ${EXTLIB}
ALLLIBA		:= ${EXTLIBA}

USRC		:= ${wildcard ${UTLDIR}*.c}
UTIL		:= ${USRC:${UTLDIR}%.c=${MACHDIR}%}

ASLS		:= ${wildcard ${ASLDIR}*.asm}
AOBS		:= ${ASLS:${ASLDIR}%.asm=${OBJDIR}%.p} ${ASLMORE:%=${OBJDIR}%.p}
HEXS		+= ${AOBS:${OBJDIR}%.p=${HEXDIR}%.hex}

SRCB		:= ${CSRC:${SRCDIR}%.c=%} \
		   ${TSRC:${TESTDIR}%.c=%}
OBJS		:= ${SRCB:%=${OBJDIR}%.o}
DEPS		:= ${SRCB:%=${DEPDIR}%.d}
DEPS		+= ${USRC:${UTLDIR}%.c=${DEPDIR}%.d}

# coverage only notices sources in ${SRCDIR}, not ${TESTDIR}.
GCNOS		:= ${CSRC:${SRCDIR}%.c=${OBJDIR}%.gcno}
GCDAS		:= ${CSRC:${SRCDIR}%.c=${OBJDIR}%.gcda}
COVS		:= ${CSRC:${SRCDIR}%.c=${COVDIR}%.gcov}

PSRC		:= ${wildcard log/timing/*.txt}
PPNG		:= ${PSRC:log/timing/%.txt=doc/img/%.png}

INCDIRS		:= ${INCDIR}

IFLAGS		:= ${INCDIRS:%=-I%}

DBGOPT		:= $(DBG) $(PRO) $(OPT) $(COV)

CFLAGS		:= ${STD} ${IFLAGS} ${DBGOPT} ${WFLAGS}

LDFLAGS		:= ${PRO} ${COV} ${LIBDIR:%=-L%}
LDLIBS		:= ${ALLLIBS:%=-l%}

LINK.c		:= $(CC) $(CFLAGS) $(LDFLAGS)

# Start building up the "make" targets that I like to always have.

default::				; ${NOOP}
all::			default		; ${NOOP}
clean::					; ${NOOP}

# Create a "make world" target that first builds
# the whole "clean" target, then when it is done
# successfully, works on the "all" target.

world::
	$C ${MAKE} clean
	$C ${MAKE} all

# Include any and all dependency files. This starts empty with
# a fresh (or cleaned) area, but adds dependencies so we can
# recompile sources that depend on headers that changed.

include ${wildcard ${DEPDIR}*.d} /dev/null

objs::		${OBJS}
default::	objs
clean::
	${RF} ${OBJDIR}*.o ${DEPDIR}*.d
	${RF} ${OBJDIR}*.gcno
	${RF} ${OBJDIR}*.gcda

exec::		${EXEC}
default::	exec
clean::
	${RF} ${EXEC}

util::		${UTIL}
default::	util
clean::
	${RF}	${UTIL}

# Modified compile rule
# - generate a breadcrumb output line
# - do not echo the (potentially very long) command lines
# - maintain a dependency file for each source file
# 

${OBJDIR}%.o:	 ${SRCDIR}%.c
	$E 'cc $* ...'
	$Q $(CC) $(CFLAGS) $< -MM | sed '1s|^$*\.o: |$@: |' > ${DEPDIR}$*.d
	$Q $(CC) $(CFLAGS) $< -c -o $@ 2>log/cc-$*.stderr

${OBJDIR}%.o:	 ${TESTDIR}%.c
	$E 'cc $* ...'
	$Q $(CC) $(CFLAGS) $< -MM | sed '1s|^$*\.o: |$@: |' > ${DEPDIR}$*.d
	$Q $(CC) $(CFLAGS) $< -c -o $@ 2>log/cc-$*.stderr

${OBJDIR}%.o:	 ${EXTDIR}%.c
	$E 'cc $* ...'
	$Q $(CC) $(CFLAGS) $< -MM | sed '1s|^$*\.o: |$@: |' > ${DEPDIR}$*.d
	$Q $(CC) $(CFLAGS) $< -c -o $@ 2>log/cc-$*.stderr

${PREDIR}%.E:	 ${SRCDIR}%.c
	$E 'cpp $* ...'
	$Q $(CC) $(CFLAGS) $< -E | indent -st > $@

${PREDIR}%.E:	 ${TESTDIR}%.c
	$E 'cpp $* ...'
	$Q $(CC) $(CFLAGS) $< -E | indent -st > $@

${EXTLIBA}:	${EXTOBJ}
	${RF} "$@"
	${AR} ${ARFLAGS} "$@" ${EXTOBJ}

${EXEC}:	${OBJS} ${ALLLIBA}
	$E 'link ${PROG} ...'
	$Q ${LINK.c} ${OBJS} ${LDLIBS} -o '$@'

${MACHDIR}%: ${UTLDIR}%.c ${ALLLIBA}
	$E 'cc $* ... [util]'
	$Q $(CC) $(CFLAGS) $< -MM | sed '1s|^$*\.o: |$@: |' > ${DEPDIR}$*.d
	$Q $(LINK.c) ${UTLDIR}$*.c ${LDLIBS} -o $@ 2>log/cc-$*.stderr

clean::
	${RF} *.err *.log
	${RF} ${EXEC}
	${RF} ${OBJDIR}*.o
	${RF} log/cc-*.stderr
	${RF} ${DEPDIR}*.d

doc/img/%.png:		${BINDIR}timing.py
	$C ${BINDIR}timing.py $*

plots::		${PPNG}

log/gcov-%.log:	log/run-%.log
	$C gcov -o ${OBJDIR}. ${CSRC}

${COVDIR}%.gcov:	${OBJDIR}%.gcno
	$C gcov $< -t > $@

covs::		${COVS}
	$C ${BINDIR}recov.py ${COVS}

coverage::	${PROG:%=log/run-%.log}
	$C ${MAKE} covs


clean::
	${RF} ${COVS}

aobs::		${AOBS}
hexs::		${HEXS}

${OBJDIR}%.p:	${ASLDIR}%.asm
	$E 'ASL $*'
	$Q ${ASL} ${ASLFLAGS} -OLIST ${LSTDIR}$*.lst -o ${OBJDIR}$*.p ${ASLDIR}$*.asm

${HEXDIR}%.hex:		${OBJDIR}%.p
	$E 'P2H $*'
	$Q ${P2H} $< $@ ${P2HFLAGS}

default::	hexs

clean::
	${RF} ${OBJDIR}*.p
	${RF} ${HEXDIR}*.hex
	${RF} ${HEXDIR}*.bin
	${RF} ${LSTDIR}*.lst

