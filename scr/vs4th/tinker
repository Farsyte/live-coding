

( I want to use // as comment-to-end-of-line )

: // 00 WORD ; IMMEDIATE

VOCABULARY ASSEMBLER IMMEDIATE




ASSEMBLER HEX

// MEMORY INFORMATION:
//
// WE ARE BEING INTERPRETED BY AN EXISTING FORTH (OLDFORTH) THAT IS
// RUNNING IN ITS NORMAL LOCATION. FOR EXAMPLE, IT MIGHT OWN THE FIRST
// 16 KIB OF MEMORY.
//
// WE ARE CONSTRUCTING A NEW IMAGE (NEWFORTH).
// - COMPILE AND RUN LOCATION (META-SYS-2 BASE-ADDR)
// - (META-SYS-2 COMPILE-ADDR)
// - (META-SYS-2 DELTA)
// - END OF MEMORY (META-SYS-2 EM)
// - BYTES RESERVED FOR DISC BUFFERS (META-SYS-2 C0)
// - BYTES RESERVED FOR USER SPACE (META-SYS-2 US)
// - BYTES RESERVED FOR RETURN STACK AND TIB (META-SYS-2 RTS)
//
// VOCABULARY FORTH IS WORDS IN OLDFORTH, AND ONLY WORDS IN MEMORY
// OWNED BY OLDFORTH SHOULD BE ADDED TO THE FORTH VOCABULARY.
//
// NEWFORTH, A WORD LIVING IN OLDFORTH, POINTS TO FORTH WORDS LIVING


REFERENCES THE EXISTING FORTH. WORDS
// ADDED TO THIS VOCABULARY SHOULD RESIDE IN MEMORY OWNED
// BY 
//
// WE ARE CONSTRUCTING A NEW IMAGE

(   


LABEL ORIGIN
	NOP	HERE JMP
	NOP	HERE JMP

LABEL COLD:VEC
LABEL COLD:xxx	0000 DW		( INITIAL VALUE FOR xxx )
LABEL COLD:yyy	0000 DW		( INITIAL VALUE FOR xxx )
( ... )


		D PUSH	H PUSH
:: NEXT		B LDAX	A L MOV
	B INX	B LDAX	A H MOV
:: NEXT1	M E MOV	H INX	M D MOV
		XCHG	PCHL

:: COLD		
		HLT	COLD JMP		( TODO )

:: WARM		
		HLT	WARM JMP		( TODO )

